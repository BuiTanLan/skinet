{"version":3,"file":"src_app_admin_admin_module_ts.js","mappings":"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","sources":["./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/admin/admin.module.ts","./src/app/admin/admin.service.ts","./src/app/admin/edit-product-form/edit-product-form.component.ts","./src/app/admin/edit-product-form/edit-product-form.component.html","./src/app/admin/edit-product-photos/edit-product-photos.component.ts","./src/app/admin/edit-product-photos/edit-product-photos.component.html","./src/app/admin/edit-product/edit-product.component.ts","./src/app/admin/edit-product/edit-product.component.html","./src/app/shared/models/product.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminComponent } from './admin.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EditProductComponent } from './edit-product/edit-product.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: AdminComponent},\r\n  {path: 'create', component: EditProductComponent, data: {breadcrumb: 'Create'}},\r\n  {path: 'edit/:id', component: EditProductComponent, data: {breadcrumb: 'Edit'}}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IProduct } from '../shared/models/product';\r\nimport { ShopParams } from '../shared/models/shopParams';\r\nimport { ShopService } from '../shop/shop.service';\r\nimport { AdminService } from './admin.service';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  products: IProduct[] = {} as IProduct[];\r\n  totalCount = 0;\r\n  shopParams: ShopParams;\r\n\r\n  constructor(private readonly shopService: ShopService, private readonly adminService: AdminService) {\r\n    this.shopParams = this.shopService.getShopParams();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProducts();\r\n  }\r\n  getProducts(useCache = false) {\r\n    this.shopService.getProducts(useCache).subscribe({\r\n      next: response => {\r\n        this.products = response.data;\r\n        this.totalCount = response.count;\r\n      },\r\n      error: error => {\r\n        console.log(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  onPageChanged(event: any) {\r\n    const params = this.shopService.getShopParams();\r\n    if (params.pageNumber !== event) {\r\n      params.pageNumber = event;\r\n      this.shopService.setShopParams(params);\r\n      this.getProducts(true);\r\n    }\r\n  }\r\n\r\n  deleteProduct(id: number) {\r\n    this.adminService.deleteProduct(id).subscribe(() => {\r\n      this.products.splice(this.products.findIndex(p => p.id === id), 1);\r\n      this.totalCount--;\r\n    });\r\n  }\r\n\r\n}\r\n","<section class=\"admin-page\" *ngIf=\"products\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n                <div class=\"d-flex justify-content-between my-3\">\r\n                    <header class=\"h2\">Product List</header>\r\n                    <button [routerLink]=\"['/admin/create']\" class=\"btn btn-outline-success\">Create new product</button>\r\n                </div>\r\n\r\n                <app-paging-header [totalCount]=\"totalCount\" [pageSize]=\"this.shopParams.pageSize\"\r\n                    [pageNumber]=\"this.shopParams.pageNumber\"></app-paging-header>\r\n\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">\r\n                                    <div class=\"p-2\">Id</div>\r\n                                </th>\r\n                                <th scope=\"col\">\r\n                                    <div class=\"p-2 text-uppercase\">Product</div>\r\n                                </th>\r\n                                <th scope=\"col\">\r\n                                    <div class=\"py-2 text-uppercase\">Name</div>\r\n                                </th>\r\n                                <th scope=\"col\">\r\n                                    <div class=\"p-2 px-3 text-uppercase\">Price</div>\r\n                                </th>\r\n                                <th scope=\"col\">\r\n                                    <div class=\"p-2 px-3 text-uppercase\">Edit</div>\r\n                                </th>\r\n                                <th scope=\"col\">\r\n                                    <div class=\"p-2 px-3 text-uppercase\">Delete</div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let product of products\">\r\n                                <td class=\"align-middle\">{{product.id}}</td>\r\n                                <td>\r\n                                    <div class=\"p-2\">\r\n                                        <img src=\"{{product.pictureUrl || '/assets/images/placeholder.png'}}\"\r\n                                            alt=\"{{product.name}}\" class=\"img-fluid\" style=\"max-height: 50px\">\r\n                                    </div>\r\n                                </td>\r\n                                <th class=\"align-middle\">\r\n                                    <h5>{{product.name}}</h5>\r\n                                </th>\r\n                                <td class=\"align-middle\">{{product.price | currency}}</td>\r\n                                <td class=\"align-middle\"><button [routerLink]=\"['edit', product.id]\"\r\n                                        class=\"btn btn-warning\">Edit</button></td>\r\n                                <td class=\"align-middle\"><button (click)=\"deleteProduct(product.id)\"\r\n                                        class=\"btn btn-danger\">Delete</button></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"d-flex justify-content-center\" *ngIf=\"totalCount > 0\">\r\n                    <app-pager [pageSize]=\"shopParams.pageSize\" [pageIndex]=\"shopParams.pageNumber\"\r\n                        [totalCount]=\"totalCount\" (pageChanged)=\"onPageChanged($event)\"></app-pager>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminComponent } from './admin.component';\r\nimport { EditProductComponent } from './edit-product/edit-product.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { EditProductFormComponent } from './edit-product-form/edit-product-form.component';\r\nimport { EditProductPhotosComponent } from './edit-product-photos/edit-product-photos.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [AdminComponent, EditProductComponent, EditProductFormComponent, EditProductPhotosComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    AdminRoutingModule\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IProduct, ProductFormValues } from '../shared/models/product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private readonly http: HttpClient) { }\r\n\r\n  createProduct(product: ProductFormValues) {\r\n    return this.http.post(this.baseUrl + 'products', product);\r\n  }\r\n\r\n  updateProduct(product: ProductFormValues, id: number) {\r\n    return this.http.put(this.baseUrl + 'products/' + id, product);\r\n  }\r\n\r\n  deleteProduct(id: number) {\r\n    return this.http.delete(this.baseUrl + 'products/' + id);\r\n  }\r\n\r\n  uploadImage(file: File, id: number) {\r\n    const formData = new FormData();\r\n    formData.append('photo', file, 'image.png');\r\n    return this.http.put(this.baseUrl + 'products/' + id + '/photo', formData, {\r\n      reportProgress: true,\r\n      observe: 'events'\r\n    });\r\n  }\r\n\r\n  deleteProductPhoto(photoId: number, productId: number) {\r\n    return this.http.delete(this.baseUrl + 'products/' + productId + '/photo/' + photoId);\r\n  }\r\n\r\n  setMainPhoto(photoId: number, productId: number) {\r\n    return this.http.post<IProduct>(this.baseUrl + 'products/' + productId + '/photo/' + photoId, {});\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ProductFormValues } from '../../shared/models/product';\r\nimport { IBrand } from '../../shared/models/brand';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AdminService } from '../admin.service';\r\nimport { IType } from 'src/app/shared/models/type';\r\n\r\n@Component({\r\n  selector: 'app-edit-product-form',\r\n  templateUrl: './edit-product-form.component.html',\r\n  styleUrls: ['./edit-product-form.component.scss']\r\n})\r\nexport class EditProductFormComponent  {\r\n  @Input() product = new ProductFormValues();\r\n  @Input() brands: IBrand[] = [];\r\n  @Input() types: IType[] = [];\r\n  min = 1;\r\n\r\n  constructor(private readonly route: ActivatedRoute, private readonly adminService: AdminService, private readonly router: Router) { }\r\n  onSubmit(product: ProductFormValues) {\r\n    if (this.route.snapshot.url[0].path === 'edit') {\r\n      const updatedProduct = { ...this.product, ...product, price: +product.price };\r\n      this.adminService.updateProduct(updatedProduct, Number(this.route.snapshot.paramMap.get('id')))\r\n        .subscribe(() => {\r\n          void this.router.navigate(['/admin']);\r\n        });\r\n    } else {\r\n      const newProduct = { ...product, price: +product.price };\r\n      this.adminService.createProduct(newProduct).subscribe(() => {\r\n        void this.router.navigate(['/admin']);\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  updatePrice(event: any) {\r\n    this.product.price = event;\r\n  }\r\n\r\n}\r\n","<form class=\"mt-4\" #productForm=\"ngForm\" (ngSubmit)=\"onSubmit(productForm.valid && productForm.value)\">\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col-md-6\">\r\n            <label for=\"name\">Product Name</label>\r\n            <input [ngClass]=\"{'is-invalid': name.invalid && (name.dirty || name.touched)}\" required type=\"text\"\r\n                class=\"form-control\" id=\"name\" placeholder=\"Product Name\" name=\"name\" #name=\"ngModel\"\r\n                [(ngModel)]=\"product.name\">\r\n            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"name.errors?.['required']\">\r\n                    Product Name is required\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n            <label for=\"price\">Price</label>\r\n            <input [ngClass]=\"{'is-invalid': price.invalid && (price.dirty || price.touched)}\" required type=\"text\"\r\n                class=\"form-control\" id=\"price\" placeholder=\"Price\" currencyMask name=\"price\" #price=\"ngModel\"\r\n                pattern=\"^\\$?([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(\\.[0-9][0-9])?$\"\r\n                [ngModel]=\"+product.price | number: '1.2-2'\" (ngModelChange)=\"updatePrice(+$event)\">\r\n            <div *ngIf=\"price.invalid && (price.dirty || price.touched)\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"price.errors?.['required']\">\r\n                    Product price is required\r\n                </div>\r\n                <div *ngIf=\"price.errors?.['pattern']\">\r\n                    Product price needs to be decimal value\r\n                </div>\r\n                <div *ngIf=\"price.errors?.['min']\">\r\n                    Product price must be greater than zero\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col-md-12\">\r\n            <label for=\"description\">Description</label>\r\n            <textarea [ngClass]=\"{'is-invalid': description.invalid && (description.dirty || description.touched)}\"\r\n                required #description=\"ngModel\" class=\"form-control\" id=\"description\" [(ngModel)]=\"product.description\"\r\n                name=\"description\" rows=\"3\"></textarea>\r\n            <div *ngIf=\"description.invalid && (description.dirty || description.touched)\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"description.errors?.['required']\">\r\n                    Product price is required\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col-md-6\">\r\n            <label for=\"brand\">Brand</label>\r\n            <select id=\"brand\" class=\"form-control\" name=\"productBrandId\" [(ngModel)]=\"product.productBrandId\" required>\r\n                <option *ngFor=\"let brand of brands\" [selected]=\"product.productBrandId === brand.id\"\r\n                    [ngValue]=\"brand.id\">{{brand.name}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"form-group col-md-6\">\r\n            <label for=\"type\">Type</label>\r\n            <select id=\"type\" class=\"form-control\" name=\"productTypeId\" [(ngModel)]=\"product.productTypeId\" required>\r\n                <option *ngFor=\"let type of types\" [selected]=\"product.productTypeId === type.id\" [ngValue]=\"type.id\">\r\n                    {{type.name}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <button [disabled]=\"!productForm.valid\" type=\"submit\" class=\"btn btn-primary my-3 float-right\">Submit</button>\r\n</form>\r\n","import { Component, Input } from '@angular/core';\r\nimport { IProduct } from '../../shared/models/product';\r\nimport { AdminService } from '../admin.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-edit-product-photos',\r\n  templateUrl: './edit-product-photos.component.html',\r\n  styleUrls: ['./edit-product-photos.component.scss']\r\n})\r\nexport class EditProductPhotosComponent {\r\n  @Input() product = {} as IProduct;\r\n  progress = 0;\r\n  addPhotoMode = false;\r\n\r\n  constructor(private readonly adminService: AdminService, private readonly toast: ToastrService) { }\r\n\r\n  addPhotoModeToggle() {\r\n    this.addPhotoMode = !this.addPhotoMode;\r\n  }\r\n\r\n  uploadFile(file: File) {\r\n    this.adminService.uploadImage(file, this.product.id).subscribe({\r\n      next: (event: HttpEvent<any>) => {\r\n        switch (event.type) {\r\n          case HttpEventType.UploadProgress:\r\n            if (event.total) {\r\n              this.progress = Math.round(event.loaded / event.total * 100);\r\n            }\r\n            break;\r\n          case HttpEventType.Response:\r\n            this.product = event.body;\r\n            setTimeout(() => {\r\n              this.progress = 0;\r\n              this.addPhotoMode = false;\r\n            }, 1500);\r\n        }\r\n      }, error: error => {\r\n        if (error.errors) {\r\n          this.toast.error(error.errors[0]);\r\n        } else {\r\n          this.toast.error('Problem uploading image');\r\n        }\r\n        this.progress = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    this.adminService.deleteProductPhoto(photoId, this.product.id).subscribe({\r\n      next:() => {\r\n        const photoIndex = this.product.photos.findIndex(x => x.id === photoId);\r\n        this.product.photos.splice(photoIndex, 1);\r\n      },\r\n      error: error => {\r\n        this.toast.error('Problem deleting photo');\r\n        console.log(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  setMainPhoto(photoId: number) {\r\n    this.adminService.setMainPhoto(photoId, this.product.id).subscribe((product: IProduct) => {\r\n      this.product = product;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"py-5\">\r\n  <div class=\"container\">\r\n    <ng-container *ngIf=\"!addPhotoMode\">\r\n      <div class=\"d-flex justify-content-between mb-3\">\r\n        <h3>Product Photos</h3>\r\n        <button class=\"btn btn-primary\" (click)=\"addPhotoModeToggle()\">\r\n          Add New Photo\r\n        </button>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-3\" *ngFor=\"let photo of product?.photos\">\r\n          <div class=\"card\">\r\n            <img\r\n              class=\"card-img-top\"\r\n              width=\"100%\"\r\n              height=\"225\"\r\n              src=\"{{ photo.pictureUrl }}\"\r\n              alt=\"{{ photo.fileName }}\"\r\n            >\r\n            <div class=\"btn-group\" style=\"width: 100%\">\r\n              <button\r\n                type=\"button\"\r\n                (click)=\"setMainPhoto(photo.id)\"\r\n                [disabled]=\"photo.isMain\"\r\n                class=\"{{\r\n                  photo.isMain ? 'btn btn-success' : 'btn btn-outline-success'\r\n                }}\"\r\n                style=\"width: 50%\"\r\n              >\r\n                Set Main\r\n              </button>\r\n              <button\r\n                (click)=\"deletePhoto(photo.id)\"\r\n                type=\"button\"\r\n                [disabled]=\"photo.isMain\"\r\n                class=\"btn btn-outline-danger\"\r\n                style=\"width: 50%\"\r\n              >\r\n                <i class=\"fa fa-trash\"></i>      \r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"addPhotoMode\">\r\n      <div class=\"d-flex justify-content-between mb-3\">\r\n        <h3 class=\"text-primary\">Add new product image</h3>\r\n        <button\r\n          class=\"btn btn-outline-secondary\"\r\n          (click)=\"addPhotoModeToggle()\"\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n            \r\n      <div class=\"progress form-group\" *ngIf=\"progress > 0\">\r\n                \r\n        <div\r\n          class=\"progress-bar progress-bar-striped bg-success\"\r\n          role=\"progressbar\"\r\n          [style.width.%]=\"progress\"\r\n        >\r\n                    {{ progress }}%         \r\n        </div>\r\n              \r\n      </div>\r\n      <app-photo-widget (addFile)=\"uploadFile($event)\"></app-photo-widget>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { forkJoin } from 'rxjs';\r\nimport { IBrand } from 'src/app/shared/models/brand';\r\nimport { IProduct, ProductFormValues } from 'src/app/shared/models/product';\r\nimport { IType } from 'src/app/shared/models/type';\r\nimport { ShopService } from 'src/app/shop/shop.service';\r\nimport { AdminService } from '../admin.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-product',\r\n  templateUrl: './edit-product.component.html',\r\n  styleUrls: ['./edit-product.component.scss']\r\n})\r\nexport class EditProductComponent implements OnInit {\r\n  product = {} as IProduct;\r\n\r\n  productFormValues: ProductFormValues;\r\n  brands = [] as IBrand[];\r\n  types = [] as IType[];\r\n\r\n  constructor(private readonly adminService: AdminService,\r\n    private readonly shopService: ShopService,\r\n    private readonly route: ActivatedRoute,\r\n    private readonly router: Router) {\r\n    this.productFormValues = new ProductFormValues();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const brands = this.getBrands();\r\n    const types = this.getTypes();\r\n\r\n    forkJoin([types, brands]).subscribe({\r\n      next: results => {\r\n        this.types = results[0];\r\n        this.brands = results[1];\r\n      },\r\n      error: error => console.log(error),\r\n      complete: () => {\r\n      if (this.route.snapshot.url[0].path === 'edit') {\r\n        this.loadProduct();\r\n      }\r\n    }\r\n  });\r\n  }\r\n  updatePrice(event: any) {\r\n    this.product.price = event;\r\n  }\r\n\r\n  loadProduct() {\r\n    this.shopService.getProduct(Number(this.route.snapshot.paramMap.get('id'))).subscribe((response: IProduct) => {\r\n      const productBrandId = this.brands.find(x => x.name === response.productBrand)?.id;\r\n      const productTypeId = this.types.find(x => x.name === response.productType)?.id;\r\n      this.product = response;\r\n      if( productBrandId && productTypeId){\r\n        this.productFormValues = { ...response, productBrandId, productTypeId };\r\n      }\r\n    });\r\n  }\r\n\r\n  getBrands() {\r\n    return this.shopService.getBrand();\r\n  }\r\n\r\n  getTypes() {\r\n    return this.shopService.getType();\r\n  }\r\n\r\n  onSubmit(product: ProductFormValues) {\r\n    if (this.route.snapshot.url[0].path === 'edit') {\r\n      const updatedProduct = { ...this.product, ...product, price: +product.price };\r\n      this.adminService.updateProduct(updatedProduct, Number(this.route.snapshot.paramMap.get('id'))).subscribe(() => {\r\n        void this.router.navigate(['/admin']);\r\n      });\r\n    } else {\r\n      const newProduct = { ...product, price: +product.price };\r\n      this.adminService.createProduct(newProduct).subscribe(() => {\r\n        void this.router.navigate(['/admin']);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","<section class=\"product-edit mt-5\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"tab-panel\">\r\n                    <tabset class=\"product-tabset\">\r\n                        <tab heading=\"Edit Product\">\r\n                            <div class=\"col-lg-8\">\r\n                                <app-edit-product-form [product]=\"productFormValues\" [brands]=\"brands\" [types]=\"types\">\r\n                                </app-edit-product-form>\r\n                            </div>\r\n                        </tab>\r\n                        <tab heading=\"Edit Photos\">\r\n                            <app-edit-product-photos [product]=\"product\"></app-edit-product-photos>\r\n                        </tab>\r\n                    </tabset>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>","export interface IProduct {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n    price: number;\r\n    pictureUrl: string;\r\n    productType: string;\r\n    productBrand: string;\r\n    photos: IPhoto[];\r\n\r\n}\r\nexport interface IPhoto {\r\n  id: number;\r\n  pictureUrl: string;\r\n  fileName: string;\r\n  isMain: boolean;\r\n}\r\nexport interface IProductToCreate {\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  pictureUrl: string;\r\n  productTypeId: number;\r\n  productBrandId: number;\r\n}\r\n\r\nexport class ProductFormValues implements IProductToCreate {\r\n  name = '';\r\n  description = '';\r\n  price = 0;\r\n  pictureUrl = '';\r\n  productBrandId = 0;\r\n  productTypeId = 0;\r\n\r\n  constructor(init?: ProductFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}